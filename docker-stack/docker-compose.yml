version: '3'
services:
  db:
    container_name: weatherapp-db
    image: s5audrey/weatherapp-db:latest
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      # MYSQL_ROOT_PASSWORD: WEATHER_APP_MYSQL_ROOT_PASSWORD
      MYSQL_ROOT_PASSWORD: my-secret-pw
      MYSQL_DATABASE: weatherapp
      MYSQL_USER: weatherapp
      MYSQL_PASSWORD: weatherapp
      # DB_HOST: weatherapp
      # DB_PASSWORD: WEATHER_APP_DB_PASSWORD
    volumes:
      - /db-data:/var/lib/mysql
    networks:
      - weatherapp
    restart: always
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
      # resources:
      #   limits:
      #     cpus: '0.5'
      #     memory: '100M'
      #   reservations:
      #     cpus: '0.2'
      #     memory: '800M'

  redis:
    container_name: weatherapp-redis
    image: s5audrey/weatherapp-redis:latest
    ports:
      - "6379:6379"
    expose:
      - "6379"
    environment:
      REDIS_USER: redis
      REDIS_PASSWORD: redis
      # REDIS_USER: WEATHER_APP_REDIS_USER
      # REDIS_PASSWORD: WEATHER_APP_REDIS_PASSWORD
    volumes:
      - redis-data:/data
    networks:
      - weatherapp
    restart: always
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
      # resources:
      #   limits:
      #     cpus: '0.5'
      #     memory: '100M'
      #   reservations:
      #     cpus: '0.2'
      #     memory: '800M'

  ui:
    container_name: weatherapp-ui
    image:  s5audrey/weatherapp-ui:latest
    ports:
      - "3399:3000"
    expose:
      - "3000"
    environment:
      AUTH_HOST: auth
      AUTH_PORT: 8080
      WEATHER_HOST: weather
      WEATHER_PORT: 5000
      REDIS_USER: redis
      REDIS_PASSWORD: redis
    networks:
      - weatherapp
    restart: always
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
      # resources:
      #   limits:
      #     cpus: '0.5'
      #     memory: '100M'
      #   reservations:
      #     cpus: '0.2'
      #     memory: '800M'

  weather:
    container_name: weatherapp-weather
    image:  s5audrey/weatherapp-weather:latest
    ports:
      - "5055:5000"
    expose:
      - "5000"
    environment:
      # APIKEY: WEATHER_API-TOKEN
      APIKEY: ecbc396f46mshb65cbb1f82cf334p1fcc87jsna5e962a3c542
    networks:
      - weatherapp
    restart: always
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
      # resources:
      #   limits:
      #     cpus: '0.5'
      #     memory: '100M'
      #   reservations:
      #     cpus: '0.2'
      #     memory: '800M'

  auth:
    container_name: weatherapp-auth
    image:  s5audrey/weatherapp-auth:latest
    ports:
      - "8899:8080"
    environment:
      DB_HOST: db
      DB_PASSWORD: my-secret-pw
      # DB_PASSWORD: WEATHER_APP_MYSQL_ROOT_PASSWORD
    networks:
      - weatherapp
    expose:
      - "8080"
    restart: always
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.role == manager
      # resources:
      #   limits:
      #     cpus: '0.5'
      #     memory: '100M'
      #   reservations:
      #     cpus: '0.2'
      #     memory: '800M'

networks:
  weatherapp:
    driver: overlay
volumes:
  db-data:
  redis-data:


